name: Build and Push Docker Image to AWS ECR

on:
  push:
    branches: [development]
  workflow_dispatch:
    inputs:
        environment:
          type: environment
          default: development
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  REPOSITORY_NAME: ${{ vars.ECR_REPOSITORY }}
  ENVIRONMENT: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || github.ref_name }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || github.ref_name }}

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # [ES] Para que el tag sea unico, se puede utilizar una combinacion de timestamp y el git sha
    # [EN] A combination of timestamp and git sha is used to make the image tag unique
    - name: Set dynamic image tag (timestamp + short SHA)
      id: tag
      run: |
        SHORT_SHA=$(git rev-parse --short HEAD)
        TIMESTAMP=$(date +%Y%m%d)

        TAG="$TIMESTAMP-$SHORT_SHA"

        echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV
        echo "Image tag: $TAG"

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        IMAGE_URI=${ECR_REGISTRY}/${REPOSITORY_NAME}:${IMAGE_TAG}
        echo "Building image: $IMAGE_URI"

        docker build -t $IMAGE_URI .
        docker push $IMAGE_URI

    - name: Generate secret file
      run: |
        echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" > ./.infrastructure/kubernetes/overlays/${ENVIRONMENT}/secret.env

    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region $AWS_REGION
  
    - name: Patch image with kustomize and deploy
      run: |
          cd ./.infrastructure/kubernetes/overlays/${ENVIRONMENT}
          kustomize edit set image ${REPOSITORY_NAME}=${{ steps.login-ecr.outputs.registry }}/${REPOSITORY_NAME}:${IMAGE_TAG}
          kubectl apply -k .