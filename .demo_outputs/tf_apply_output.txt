[0m[1mmodule.eks.module.kms.data.aws_partition.current[0]: Reading...[0m[0m
[0m[1mmodule.eks.data.aws_iam_policy_document.node_assume_role_policy[0]: Reading...[0m[0m
[0m[1mmodule.eks.data.aws_caller_identity.current[0]: Reading...[0m[0m
[0m[1mmodule.eks.data.aws_iam_policy_document.assume_role_policy[0]: Reading...[0m[0m
[0m[1mmodule.eks.data.aws_partition.current[0]: Reading...[0m[0m
[0m[1mdata.aws_availability_zones.available: Reading...[0m[0m
[0m[1mmodule.eks.module.kms.data.aws_caller_identity.current[0]: Reading...[0m[0m
[0m[1mmodule.eks.data.aws_partition.current[0]: Read complete after 0s [id=aws][0m
[0m[1mmodule.container_registry.aws_ecr_repository.foo: Refreshing state... [id=devsu-python-app-ecr][0m
[0m[1mmodule.eks.data.aws_iam_policy_document.custom[0]: Reading...[0m[0m
[0m[1mmodule.eks.data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=2830595799][0m
[0m[1mmodule.eks.data.aws_iam_policy_document.node_assume_role_policy[0]: Read complete after 0s [id=3518401652][0m
[0m[1mmodule.eks.module.kms.data.aws_partition.current[0]: Read complete after 0s [id=aws][0m
[0m[1mmodule.eks.data.aws_iam_policy_document.custom[0]: Read complete after 0s [id=513122117][0m
[0m[1mmodule.eks.data.aws_caller_identity.current[0]: Read complete after 0s [id=842675974385][0m
[0m[1mmodule.eks.data.aws_iam_session_context.current[0]: Reading...[0m[0m
[0m[1mmodule.eks.data.aws_iam_session_context.current[0]: Read complete after 0s [id=arn:aws:iam::842675974385:user/Terraform][0m
[0m[1mmodule.eks.module.kms.data.aws_caller_identity.current[0]: Read complete after 0s [id=842675974385][0m
[0m[1mdata.aws_availability_zones.available: Read complete after 0s [id=us-east-1][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # module.eks.data.tls_certificate.this[0][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "tls_certificate" "this" {
      [32m+[0m[0m certificates = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m url          = (known after apply)
    }

[1m  # module.eks.aws_cloudwatch_log_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "this" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = "/aws/eks/devsu-python-app-development/cluster"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 90
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags              = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "/aws/eks/devsu-python-app-development/cluster"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all          = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "/aws/eks/devsu-python-app-development/cluster"
          [32m+[0m[0m "Terraform"   = "true"
        }
    }

[1m  # module.eks.aws_ec2_tag.cluster_primary_security_group["Environment"][0m will be created
[0m  [32m+[0m[0m resource "aws_ec2_tag" "cluster_primary_security_group" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m key         = "Environment"
      [32m+[0m[0m resource_id = (known after apply)
      [32m+[0m[0m value       = "development"
    }

[1m  # module.eks.aws_ec2_tag.cluster_primary_security_group["Terraform"][0m will be created
[0m  [32m+[0m[0m resource "aws_ec2_tag" "cluster_primary_security_group" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m key         = "Terraform"
      [32m+[0m[0m resource_id = (known after apply)
      [32m+[0m[0m value       = "true"
    }

[1m  # module.eks.aws_eks_access_entry.this["cluster_creator"][0m will be created
[0m  [32m+[0m[0m resource "aws_eks_access_entry" "this" {
      [32m+[0m[0m access_entry_arn  = (known after apply)
      [32m+[0m[0m cluster_name      = (known after apply)
      [32m+[0m[0m created_at        = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m kubernetes_groups = (known after apply)
      [32m+[0m[0m modified_at       = (known after apply)
      [32m+[0m[0m principal_arn     = "arn:aws:iam::842675974385:user/Terraform"
      [32m+[0m[0m tags              = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all          = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m type              = "STANDARD"
      [32m+[0m[0m user_name         = (known after apply)
    }

[1m  # module.eks.aws_eks_access_policy_association.this["cluster_creator_admin"][0m will be created
[0m  [32m+[0m[0m resource "aws_eks_access_policy_association" "this" {
      [32m+[0m[0m associated_at = (known after apply)
      [32m+[0m[0m cluster_name  = (known after apply)
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m modified_at   = (known after apply)
      [32m+[0m[0m policy_arn    = "arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy"
      [32m+[0m[0m principal_arn = "arn:aws:iam::842675974385:user/Terraform"

      [32m+[0m[0m access_scope {
          [32m+[0m[0m type = "cluster"
        }
    }

[1m  # module.eks.aws_eks_cluster.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_eks_cluster" "this" {
      [32m+[0m[0m arn                           = (known after apply)
      [32m+[0m[0m bootstrap_self_managed_addons = false
      [32m+[0m[0m certificate_authority         = (known after apply)
      [32m+[0m[0m cluster_id                    = (known after apply)
      [32m+[0m[0m created_at                    = (known after apply)
      [32m+[0m[0m enabled_cluster_log_types     = [
          [32m+[0m[0m "api",
          [32m+[0m[0m "audit",
          [32m+[0m[0m "authenticator",
        ]
      [32m+[0m[0m endpoint                      = (known after apply)
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m identity                      = (known after apply)
      [32m+[0m[0m name                          = "devsu-python-app-development"
      [32m+[0m[0m platform_version              = (known after apply)
      [32m+[0m[0m role_arn                      = (known after apply)
      [32m+[0m[0m status                        = (known after apply)
      [32m+[0m[0m tags                          = {
          [32m+[0m[0m "Environment"           = "development"
          [32m+[0m[0m "Terraform"             = "true"
          [32m+[0m[0m "terraform-aws-modules" = "eks"
        }
      [32m+[0m[0m tags_all                      = {
          [32m+[0m[0m "Environment"           = "development"
          [32m+[0m[0m "Terraform"             = "true"
          [32m+[0m[0m "terraform-aws-modules" = "eks"
        }
      [32m+[0m[0m version                       = "1.31"

      [32m+[0m[0m access_config {
          [32m+[0m[0m authentication_mode                         = "API_AND_CONFIG_MAP"
          [32m+[0m[0m bootstrap_cluster_creator_admin_permissions = false
        }

      [32m+[0m[0m compute_config {
          [32m+[0m[0m enabled       = true
          [32m+[0m[0m node_pools    = [
              [32m+[0m[0m "general-purpose",
            ]
          [32m+[0m[0m node_role_arn = (known after apply)
        }

      [32m+[0m[0m encryption_config {
          [32m+[0m[0m resources = [
              [32m+[0m[0m "secrets",
            ]

          [32m+[0m[0m provider {
              [32m+[0m[0m key_arn = (known after apply)
            }
        }

      [32m+[0m[0m kubernetes_network_config {
          [32m+[0m[0m ip_family         = "ipv4"
          [32m+[0m[0m service_ipv4_cidr = (known after apply)
          [32m+[0m[0m service_ipv6_cidr = (known after apply)

          [32m+[0m[0m elastic_load_balancing {
              [32m+[0m[0m enabled = true
            }
        }

      [32m+[0m[0m storage_config {
          [32m+[0m[0m block_storage {
              [32m+[0m[0m enabled = true
            }
        }

      [32m+[0m[0m timeouts {}

      [32m+[0m[0m upgrade_policy (known after apply)

      [32m+[0m[0m vpc_config {
          [32m+[0m[0m cluster_security_group_id = (known after apply)
          [32m+[0m[0m endpoint_private_access   = true
          [32m+[0m[0m endpoint_public_access    = true
          [32m+[0m[0m public_access_cidrs       = [
              [32m+[0m[0m "0.0.0.0/0",
            ]
          [32m+[0m[0m security_group_ids        = (known after apply)
          [32m+[0m[0m subnet_ids                = (known after apply)
          [32m+[0m[0m vpc_id                    = (known after apply)
        }
    }

[1m  # module.eks.aws_iam_openid_connect_provider.oidc_provider[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_openid_connect_provider" "oidc_provider" {
      [32m+[0m[0m arn             = (known after apply)
      [32m+[0m[0m client_id_list  = [
          [32m+[0m[0m "sts.amazonaws.com",
        ]
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m tags            = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-development-eks-irsa"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all        = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-development-eks-irsa"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m thumbprint_list = (known after apply)
      [32m+[0m[0m url             = (known after apply)
    }

[1m  # module.eks.aws_iam_policy.cluster_encryption[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy" "cluster_encryption" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m attachment_count = (known after apply)
      [32m+[0m[0m description      = "Cluster encryption policy to allow cluster role to utilize CMK provided"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = (known after apply)
      [32m+[0m[0m name_prefix      = "devsu-python-app-development-cluster-ClusterEncryption"
      [32m+[0m[0m path             = "/"
      [32m+[0m[0m policy           = (known after apply)
      [32m+[0m[0m policy_id        = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Terraform"   = "true"
        }
    }

[1m  # module.eks.aws_iam_policy.custom[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy" "custom" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m attachment_count = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = (known after apply)
      [32m+[0m[0m name_prefix      = "devsu-python-app-development-cluster-"
      [32m+[0m[0m path             = "/"
      [32m+[0m[0m policy           = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = [
                          [32m+[0m[0m "ec2:RunInstances",
                          [32m+[0m[0m "ec2:CreateLaunchTemplate",
                          [32m+[0m[0m "ec2:CreateFleet",
                        ]
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m StringEquals = {
                              [32m+[0m[0m "aws:RequestTag/eks:eks-cluster-name" = "${aws:PrincipalTag/eks:eks-cluster-name}"
                            }
                          [32m+[0m[0m StringLike   = {
                              [32m+[0m[0m "aws:RequestTag/eks:kubernetes-node-class-name" = "*"
                              [32m+[0m[0m "aws:RequestTag/eks:kubernetes-node-pool-name"  = "*"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Resource  = "*"
                      [32m+[0m[0m Sid       = "Compute"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = [
                          [32m+[0m[0m "ec2:CreateVolume",
                          [32m+[0m[0m "ec2:CreateSnapshot",
                        ]
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m StringEquals = {
                              [32m+[0m[0m "aws:RequestTag/eks:eks-cluster-name" = "${aws:PrincipalTag/eks:eks-cluster-name}"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Resource  = [
                          [32m+[0m[0m "arn:aws:ec2:*:*:volume/*",
                          [32m+[0m[0m "arn:aws:ec2:*:*:snapshot/*",
                        ]
                      [32m+[0m[0m Sid       = "Storage"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "ec2:CreateNetworkInterface"
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m StringEquals = {
                              [32m+[0m[0m "aws:RequestTag/eks:eks-cluster-name"         = "${aws:PrincipalTag/eks:eks-cluster-name}"
                              [32m+[0m[0m "aws:RequestTag/eks:kubernetes-cni-node-name" = "*"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Resource  = "*"
                      [32m+[0m[0m Sid       = "Networking"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = [
                          [32m+[0m[0m "elasticloadbalancing:CreateTargetGroup",
                          [32m+[0m[0m "elasticloadbalancing:CreateRule",
                          [32m+[0m[0m "elasticloadbalancing:CreateLoadBalancer",
                          [32m+[0m[0m "elasticloadbalancing:CreateListener",
                          [32m+[0m[0m "ec2:CreateSecurityGroup",
                        ]
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m StringEquals = {
                              [32m+[0m[0m "aws:RequestTag/eks:eks-cluster-name" = "${aws:PrincipalTag/eks:eks-cluster-name}"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Resource  = "*"
                      [32m+[0m[0m Sid       = "LoadBalancer"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "shield:CreateProtection"
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m StringEquals = {
                              [32m+[0m[0m "aws:RequestTag/eks:eks-cluster-name" = "${aws:PrincipalTag/eks:eks-cluster-name}"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Resource  = "*"
                      [32m+[0m[0m Sid       = "ShieldProtection"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "shield:TagResource"
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m StringEquals = {
                              [32m+[0m[0m "aws:RequestTag/eks:eks-cluster-name" = "${aws:PrincipalTag/eks:eks-cluster-name}"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Resource  = "arn:aws:shield::*:protection/*"
                      [32m+[0m[0m Sid       = "ShieldTagResource"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m policy_id        = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Terraform"   = "true"
        }
    }

[1m  # module.eks.aws_iam_role.eks_auto[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "eks_auto" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = [
                          [32m+[0m[0m "sts:TagSession",
                          [32m+[0m[0m "sts:AssumeRole",
                        ]
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = "EKSAutoNodeAssumeRole"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = true
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m name_prefix           = "devsu-python-app-development-eks-auto-"
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.eks.aws_iam_role.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = [
                          [32m+[0m[0m "sts:TagSession",
                          [32m+[0m[0m "sts:AssumeRole",
                        ]
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "eks.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = "EKSClusterAssumeRole"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = true
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m name_prefix           = "devsu-python-app-development-cluster-"
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.eks.aws_iam_role_policy_attachment.cluster_encryption[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "cluster_encryption" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = (known after apply)
      [32m+[0m[0m role       = (known after apply)
    }

[1m  # module.eks.aws_iam_role_policy_attachment.custom[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "custom" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = (known after apply)
      [32m+[0m[0m role       = (known after apply)
    }

[1m  # module.eks.aws_iam_role_policy_attachment.eks_auto["AmazonEC2ContainerRegistryPullOnly"][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks_auto" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPullOnly"
      [32m+[0m[0m role       = (known after apply)
    }

[1m  # module.eks.aws_iam_role_policy_attachment.eks_auto["AmazonEKSWorkerNodeMinimalPolicy"][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks_auto" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodeMinimalPolicy"
      [32m+[0m[0m role       = (known after apply)
    }

[1m  # module.eks.aws_iam_role_policy_attachment.this["AmazonEKSBlockStoragePolicy"][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSBlockStoragePolicy"
      [32m+[0m[0m role       = (known after apply)
    }

[1m  # module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      [32m+[0m[0m role       = (known after apply)
    }

[1m  # module.eks.aws_iam_role_policy_attachment.this["AmazonEKSComputePolicy"][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSComputePolicy"
      [32m+[0m[0m role       = (known after apply)
    }

[1m  # module.eks.aws_iam_role_policy_attachment.this["AmazonEKSLoadBalancingPolicy"][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSLoadBalancingPolicy"
      [32m+[0m[0m role       = (known after apply)
    }

[1m  # module.eks.aws_iam_role_policy_attachment.this["AmazonEKSNetworkingPolicy"][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSNetworkingPolicy"
      [32m+[0m[0m role       = (known after apply)
    }

[1m  # module.eks.aws_security_group.cluster[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "cluster" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "EKS cluster security group"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "devsu-python-app-development-cluster-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-development-cluster"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-development-cluster"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.eks.aws_security_group.node[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "node" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "EKS node shared security group"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "devsu-python-app-development-node-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Environment"                                        = "development"
          [32m+[0m[0m "Name"                                               = "devsu-python-app-development-node"
          [32m+[0m[0m "Terraform"                                          = "true"
          [32m+[0m[0m "kubernetes.io/cluster/devsu-python-app-development" = "owned"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Environment"                                        = "development"
          [32m+[0m[0m "Name"                                               = "devsu-python-app-development-node"
          [32m+[0m[0m "Terraform"                                          = "true"
          [32m+[0m[0m "kubernetes.io/cluster/devsu-python-app-development" = "owned"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.eks.aws_security_group_rule.cluster["ingress_nodes_443"][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "cluster" {
      [32m+[0m[0m description              = "Node groups to cluster API"
      [32m+[0m[0m from_port                = 443
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 443
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.eks.aws_security_group_rule.node["egress_all"][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Allow all egress"
      [32m+[0m[0m from_port                = 0
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 0
      [32m+[0m[0m type                     = "egress"
    }

[1m  # module.eks.aws_security_group_rule.node["ingress_cluster_443"][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m[0m description              = "Cluster API to node groups"
      [32m+[0m[0m from_port                = 443
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 443
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m[0m description              = "Cluster API to node 4443/tcp webhook"
      [32m+[0m[0m from_port                = 4443
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 4443
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m[0m description              = "Cluster API to node 6443/tcp webhook"
      [32m+[0m[0m from_port                = 6443
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 6443
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m[0m description              = "Cluster API to node 8443/tcp webhook"
      [32m+[0m[0m from_port                = 8443
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 8443
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m[0m description              = "Cluster API to node 9443/tcp webhook"
      [32m+[0m[0m from_port                = 9443
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 9443
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m[0m description              = "Cluster API to node kubelets"
      [32m+[0m[0m from_port                = 10250
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 10250
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m[0m description              = "Node to node ingress on ephemeral ports"
      [32m+[0m[0m from_port                = 1025
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = true
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 65535
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m[0m description              = "Node to node CoreDNS"
      [32m+[0m[0m from_port                = 53
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = true
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 53
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "node" {
      [32m+[0m[0m description              = "Node to node CoreDNS UDP"
      [32m+[0m[0m from_port                = 53
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m prefix_list_ids          = []
      [32m+[0m[0m protocol                 = "udp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = true
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 53
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.eks.time_sleep.this[0][0m will be created
[0m  [32m+[0m[0m resource "time_sleep" "this" {
      [32m+[0m[0m create_duration = "30s"
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m triggers        = {
          [32m+[0m[0m "cluster_certificate_authority_data" = (known after apply)
          [32m+[0m[0m "cluster_endpoint"                   = (known after apply)
          [32m+[0m[0m "cluster_name"                       = (known after apply)
          [32m+[0m[0m "cluster_service_cidr"               = (known after apply)
          [32m+[0m[0m "cluster_version"                    = "1.31"
        }
    }

[1m  # module.vpc.aws_default_network_acl.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_network_acl" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_network_acl_id = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc-default"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc-default"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m egress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m ipv6_cidr_block = "::/0"
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 101
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
      [32m+[0m[0m egress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m cidr_block      = "0.0.0.0/0"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 100
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m ingress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m ipv6_cidr_block = "::/0"
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 101
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
      [32m+[0m[0m ingress {
          [32m+[0m[0m action          = "allow"
          [32m+[0m[0m cidr_block      = "0.0.0.0/0"
          [32m+[0m[0m from_port       = 0
          [32m+[0m[0m protocol        = "-1"
          [32m+[0m[0m rule_no         = 100
          [32m+[0m[0m to_port         = 0
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
    }

[1m  # module.vpc.aws_default_route_table.default[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_route_table" "default" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_route_table_id = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m route                  = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc-default"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc-default"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "5m"
          [32m+[0m[0m update = "5m"
        }
    }

[1m  # module.vpc.aws_default_security_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_default_security_group" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = (known after apply)
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc-default"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc-default"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.vpc.aws_eip.nat[0][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = "vpc"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m ipam_pool_id         = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m ptr_record           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc-us-east-1a"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc-us-east-1a"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc                  = (known after apply)
    }

[1m  # module.vpc.aws_internet_gateway.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "this" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.vpc.aws_nat_gateway.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "this" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc-us-east-1a"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc-us-east-1a"
          [32m+[0m[0m "Terraform"   = "true"
        }
    }

[1m  # module.vpc.aws_route.private_nat_gateway[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "private_nat_gateway" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m nat_gateway_id         = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "5m"
        }
    }

[1m  # module.vpc.aws_route.public_internet_gateway[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "public_internet_gateway" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m gateway_id             = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "5m"
        }
    }

[1m  # module.vpc.aws_route_table.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc-private"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc-private"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc-public"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc-public"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment"                     = "development"
          [32m+[0m[0m "Name"                            = "devsu-python-app-vpc-private-us-east-1a"
          [32m+[0m[0m "Terraform"                       = "true"
          [32m+[0m[0m "kubernetes.io/role/internal-elb" = "1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment"                     = "development"
          [32m+[0m[0m "Name"                            = "devsu-python-app-vpc-private-us-east-1a"
          [32m+[0m[0m "Terraform"                       = "true"
          [32m+[0m[0m "kubernetes.io/role/internal-elb" = "1"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment"                     = "development"
          [32m+[0m[0m "Name"                            = "devsu-python-app-vpc-private-us-east-1b"
          [32m+[0m[0m "Terraform"                       = "true"
          [32m+[0m[0m "kubernetes.io/role/internal-elb" = "1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment"                     = "development"
          [32m+[0m[0m "Name"                            = "devsu-python-app-vpc-private-us-east-1b"
          [32m+[0m[0m "Terraform"                       = "true"
          [32m+[0m[0m "kubernetes.io/role/internal-elb" = "1"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.private[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.3.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment"                     = "development"
          [32m+[0m[0m "Name"                            = "devsu-python-app-vpc-private-us-east-1c"
          [32m+[0m[0m "Terraform"                       = "true"
          [32m+[0m[0m "kubernetes.io/role/internal-elb" = "1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment"                     = "development"
          [32m+[0m[0m "Name"                            = "devsu-python-app-vpc-private-us-east-1c"
          [32m+[0m[0m "Terraform"                       = "true"
          [32m+[0m[0m "kubernetes.io/role/internal-elb" = "1"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.4.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment"            = "development"
          [32m+[0m[0m "Name"                   = "devsu-python-app-vpc-public-us-east-1a"
          [32m+[0m[0m "Terraform"              = "true"
          [32m+[0m[0m "kubernetes.io/role/elb" = "1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment"            = "development"
          [32m+[0m[0m "Name"                   = "devsu-python-app-vpc-public-us-east-1a"
          [32m+[0m[0m "Terraform"              = "true"
          [32m+[0m[0m "kubernetes.io/role/elb" = "1"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.5.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment"            = "development"
          [32m+[0m[0m "Name"                   = "devsu-python-app-vpc-public-us-east-1b"
          [32m+[0m[0m "Terraform"              = "true"
          [32m+[0m[0m "kubernetes.io/role/elb" = "1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment"            = "development"
          [32m+[0m[0m "Name"                   = "devsu-python-app-vpc-public-us-east-1b"
          [32m+[0m[0m "Terraform"              = "true"
          [32m+[0m[0m "kubernetes.io/role/elb" = "1"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public[2][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.6.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Environment"            = "development"
          [32m+[0m[0m "Name"                   = "devsu-python-app-vpc-public-us-east-1c"
          [32m+[0m[0m "Terraform"              = "true"
          [32m+[0m[0m "kubernetes.io/role/elb" = "1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Environment"            = "development"
          [32m+[0m[0m "Name"                   = "devsu-python-app-vpc-public-us-east-1c"
          [32m+[0m[0m "Terraform"              = "true"
          [32m+[0m[0m "kubernetes.io/role/elb" = "1"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_vpc.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "this" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc"
          [32m+[0m[0m "Terraform"   = "true"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Environment" = "development"
          [32m+[0m[0m "Name"        = "devsu-python-app-vpc"
          [32m+[0m[0m "Terraform"   = "true"
        }
    }

[1m  # module.eks.module.kms.data.aws_iam_policy_document.this[0][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "this" {
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m json                      = (known after apply)
      [32m+[0m[0m minified_json             = (known after apply)
      [32m+[0m[0m override_policy_documents = []
      [32m+[0m[0m source_policy_documents   = []

      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "kms:*",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]
          [32m+[0m[0m sid       = "Default"

          [32m+[0m[0m principals {
              [32m+[0m[0m identifiers = [
                  [32m+[0m[0m "arn:aws:iam::842675974385:root",
                ]
              [32m+[0m[0m type        = "AWS"
            }
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "kms:CancelKeyDeletion",
              [32m+[0m[0m "kms:Create*",
              [32m+[0m[0m "kms:Delete*",
              [32m+[0m[0m "kms:Describe*",
              [32m+[0m[0m "kms:Disable*",
              [32m+[0m[0m "kms:Enable*",
              [32m+[0m[0m "kms:Get*",
              [32m+[0m[0m "kms:ImportKeyMaterial",
              [32m+[0m[0m "kms:List*",
              [32m+[0m[0m "kms:Put*",
              [32m+[0m[0m "kms:ReplicateKey",
              [32m+[0m[0m "kms:Revoke*",
              [32m+[0m[0m "kms:ScheduleKeyDeletion",
              [32m+[0m[0m "kms:TagResource",
              [32m+[0m[0m "kms:UntagResource",
              [32m+[0m[0m "kms:Update*",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]
          [32m+[0m[0m sid       = "KeyAdministration"

          [32m+[0m[0m principals {
              [32m+[0m[0m identifiers = [
                  [32m+[0m[0m "arn:aws:iam::842675974385:user/Terraform",
                ]
              [32m+[0m[0m type        = "AWS"
            }
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "kms:Decrypt",
              [32m+[0m[0m "kms:DescribeKey",
              [32m+[0m[0m "kms:Encrypt",
              [32m+[0m[0m "kms:GenerateDataKey*",
              [32m+[0m[0m "kms:ReEncrypt*",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]
          [32m+[0m[0m sid       = "KeyUsage"

          [32m+[0m[0m principals {
              [32m+[0m[0m identifiers = [
                  [32m+[0m[0m (known after apply),
                ]
              [32m+[0m[0m type        = "AWS"
            }
        }
    }

[1m  # module.eks.module.kms.aws_kms_alias.this["cluster"][0m will be created
[0m  [32m+[0m[0m resource "aws_kms_alias" "this" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m name           = "alias/eks/devsu-python-app-development"
      [32m+[0m[0m name_prefix    = (known after apply)
      [32m+[0m[0m target_key_arn = (known after apply)
      [32m+[0m[0m target_key_id  = (known after apply)
    }

[1m  # module.eks.module.kms.aws_kms_key.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_kms_key" "this" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m bypass_policy_lockout_safety_check = false
      [32m+[0m[0m customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      [32m+[0m[0m description                        = "devsu-python-app-development cluster encryption key"
      [32m+[0m[0m enable_key_rotation                = true
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m is_enabled                         = true
      [32m+[0m[0m key_id                             = (known after apply)
      [32m+[0m[0m key_usage                          = "ENCRYPT_DECRYPT"
      [32m+[0m[0m multi_region                       = false
      [32m+[0m[0m policy                             = (known after apply)
      [32m+[0m[0m rotation_period_in_days            = (known after apply)
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Environment"           = "development"
          [32m+[0m[0m "Terraform"             = "true"
          [32m+[0m[0m "terraform-aws-modules" = "eks"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Environment"           = "development"
          [32m+[0m[0m "Terraform"             = "true"
          [32m+[0m[0m "terraform-aws-modules" = "eks"
        }
    }

[1mPlan:[0m 59 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m cluster_endpoint          = (known after apply)
  [32m+[0m[0m cluster_name              = "devsu-python-app-development"
  [32m+[0m[0m cluster_security_group_id = (known after apply)
  [32m+[0m[0m region                    = "us-east-1"
[0m[1m
Do you want to perform these actions?[0m
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  [1mEnter a value:[0m [0m
[0m[1mmodule.vpc.aws_vpc.this[0]: Creating...[0m[0m
[0m[1mmodule.eks.aws_cloudwatch_log_group.this[0]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_policy.custom[0]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role.eks_auto[0]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role.this[0]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_policy.custom[0]: Creation complete after 1s [id=arn:aws:iam::842675974385:policy/devsu-python-app-development-cluster-20250418020336337300000001][0m
[0m[1mmodule.eks.aws_cloudwatch_log_group.this[0]: Creation complete after 1s [id=/aws/eks/devsu-python-app-development/cluster][0m
[0m[1mmodule.eks.aws_iam_role.eks_auto[0]: Creation complete after 1s [id=devsu-python-app-development-eks-auto-20250418020336337400000002][0m
[0m[1mmodule.eks.aws_iam_role.this[0]: Creation complete after 1s [id=devsu-python-app-development-cluster-20250418020336337500000003][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.eks_auto["AmazonEC2ContainerRegistryPullOnly"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.eks_auto["AmazonEKSWorkerNodeMinimalPolicy"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.this["AmazonEKSLoadBalancingPolicy"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.custom[0]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.this["AmazonEKSBlockStoragePolicy"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.this["AmazonEKSComputePolicy"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.this["AmazonEKSNetworkingPolicy"]: Creating...[0m[0m
[0m[1mmodule.eks.module.kms.data.aws_iam_policy_document.this[0]: Reading...[0m[0m
[0m[1mmodule.eks.module.kms.data.aws_iam_policy_document.this[0]: Read complete after 0s [id=3010428482][0m
[0m[1mmodule.eks.module.kms.aws_kms_key.this[0]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.eks_auto["AmazonEC2ContainerRegistryPullOnly"]: Creation complete after 1s [id=devsu-python-app-development-eks-auto-20250418020336337400000002-20250418020337529600000005][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.eks_auto["AmazonEKSWorkerNodeMinimalPolicy"]: Creation complete after 1s [id=devsu-python-app-development-eks-auto-20250418020336337400000002-20250418020337485200000004][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.this["AmazonEKSLoadBalancingPolicy"]: Creation complete after 1s [id=devsu-python-app-development-cluster-20250418020336337500000003-20250418020337632200000007][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.custom[0]: Creation complete after 1s [id=devsu-python-app-development-cluster-20250418020336337500000003-20250418020337537800000006][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.this["AmazonEKSBlockStoragePolicy"]: Creation complete after 1s [id=devsu-python-app-development-cluster-20250418020336337500000003-20250418020337690800000008][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.this["AmazonEKSNetworkingPolicy"]: Creation complete after 1s [id=devsu-python-app-development-cluster-20250418020336337500000003-20250418020337723300000009][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"]: Creation complete after 1s [id=devsu-python-app-development-cluster-20250418020336337500000003-2025041802033778350000000a][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.this["AmazonEKSComputePolicy"]: Creation complete after 1s [id=devsu-python-app-development-cluster-20250418020336337500000003-2025041802033780770000000b][0m
[0m[1mmodule.vpc.aws_vpc.this[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.eks.module.kms.aws_kms_key.this[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc.aws_vpc.this[0]: Creation complete after 14s [id=vpc-0de0a7e91a3c13d65][0m
[0m[1mmodule.vpc.aws_internet_gateway.this[0]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_subnet.private[0]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_default_security_group.this[0]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_route_table.public[0]: Creating...[0m[0m
[0m[1mmodule.eks.aws_security_group.node[0]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_subnet.private[2]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_default_route_table.default[0]: Creating...[0m[0m
[0m[1mmodule.eks.aws_security_group.cluster[0]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_subnet.private[1]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_default_route_table.default[0]: Creation complete after 0s [id=rtb-0b53a39baceb40220][0m
[0m[1mmodule.vpc.aws_route_table.private[0]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_route_table.public[0]: Creation complete after 1s [id=rtb-0b78c39c8046e2de4][0m
[0m[1mmodule.vpc.aws_default_network_acl.this[0]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_internet_gateway.this[0]: Creation complete after 1s [id=igw-0a327981d94dfaa03][0m
[0m[1mmodule.vpc.aws_subnet.public[1]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_subnet.private[2]: Creation complete after 1s [id=subnet-00da04a3fcfbafb06][0m
[0m[1mmodule.vpc.aws_subnet.private[0]: Creation complete after 1s [id=subnet-09fe6eb20f6606d2b][0m
[0m[1mmodule.vpc.aws_subnet.public[2]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_subnet.public[0]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_subnet.private[1]: Creation complete after 1s [id=subnet-08363afa99d6d6f6d][0m
[0m[1mmodule.vpc.aws_eip.nat[0]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_route_table.private[0]: Creation complete after 0s [id=rtb-0486adb25ef758973][0m
[0m[1mmodule.vpc.aws_route.public_internet_gateway[0]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_subnet.public[1]: Creation complete after 1s [id=subnet-0dedb173485be7ae6][0m
[0m[1mmodule.vpc.aws_route_table_association.private[2]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_subnet.public[2]: Creation complete after 1s [id=subnet-0f48e4fb04744d3e3][0m
[0m[1mmodule.vpc.aws_subnet.public[0]: Creation complete after 1s [id=subnet-0b43bf8cbd31e002f][0m
[0m[1mmodule.vpc.aws_route_table_association.private[0]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_route_table_association.private[1]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_route.public_internet_gateway[0]: Creation complete after 1s [id=r-rtb-0b78c39c8046e2de41080289494][0m
[0m[1mmodule.vpc.aws_route_table_association.public[2]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_eip.nat[0]: Creation complete after 1s [id=eipalloc-0e684ff1fd0fb8e56][0m
[0m[1mmodule.vpc.aws_route_table_association.public[0]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_default_network_acl.this[0]: Creation complete after 1s [id=acl-0341ba9c50db924f3][0m
[0m[1mmodule.vpc.aws_route_table_association.private[2]: Creation complete after 0s [id=rtbassoc-0dfacd4d0930583e5][0m
[0m[1mmodule.eks.aws_security_group.node[0]: Creation complete after 2s [id=sg-044d89ba72a606cb4][0m
[0m[1mmodule.vpc.aws_route_table_association.public[1]: Creating...[0m[0m
[0m[1mmodule.eks.aws_security_group.cluster[0]: Creation complete after 2s [id=sg-06fc2e5f8277d4da4][0m
[0m[1mmodule.vpc.aws_default_security_group.this[0]: Creation complete after 2s [id=sg-020f50836de51a954][0m
[0m[1mmodule.vpc.aws_nat_gateway.this[0]: Creating...[0m[0m
[0m[1mmodule.eks.aws_security_group_rule.cluster["ingress_nodes_443"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_security_group_rule.node["egress_all"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_cluster_443"]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_route_table_association.private[0]: Creation complete after 1s [id=rtbassoc-07a56f1862ffa7307][0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_route_table_association.private[1]: Creation complete after 1s [id=rtbassoc-00e18c951b92d6438][0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_route_table_association.public[0]: Creation complete after 1s [id=rtbassoc-0736eeaf4936dc52d][0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_self_coredns_udp"]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_route_table_association.public[2]: Creation complete after 1s [id=rtbassoc-0df81d5d2b5953c13][0m
[0m[1mmodule.vpc.aws_route_table_association.public[1]: Creation complete after 1s [id=rtbassoc-0b06fd6c7644782f5][0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_security_group_rule.cluster["ingress_nodes_443"]: Creation complete after 1s [id=sgrule-320624763][0m
[0m[1mmodule.eks.aws_security_group_rule.node["egress_all"]: Creation complete after 1s [id=sgrule-1683764099][0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_cluster_kubelet"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_cluster_443"]: Creation complete after 2s [id=sgrule-3512709910][0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"]: Creation complete after 2s [id=sgrule-2208057329][0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"]: Creation complete after 1s [id=sgrule-2309989850][0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_self_coredns_udp"]: Creation complete after 2s [id=sgrule-300114269][0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"]: Creation complete after 2s [id=sgrule-2428533712][0m
[0m[1mmodule.eks.module.kms.aws_kms_key.this[0]: Still creating... [18s elapsed][0m[0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"]: Creation complete after 3s [id=sgrule-3879564346][0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"]: Creation complete after 4s [id=sgrule-3049046706][0m
[0m[1mmodule.eks.module.kms.aws_kms_key.this[0]: Creation complete after 21s [id=0b3ef953-ed97-4c62-a53d-7e9157a26747][0m
[0m[1mmodule.eks.module.kms.aws_kms_alias.this["cluster"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_policy.cluster_encryption[0]: Creating...[0m[0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_cluster_kubelet"]: Creation complete after 5s [id=sgrule-506896440][0m
[0m[1mmodule.eks.module.kms.aws_kms_alias.this["cluster"]: Creation complete after 0s [id=alias/eks/devsu-python-app-development][0m
[0m[1mmodule.eks.aws_iam_policy.cluster_encryption[0]: Creation complete after 0s [id=arn:aws:iam::842675974385:policy/devsu-python-app-development-cluster-ClusterEncryption20250418020357769400000011][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.cluster_encryption[0]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.cluster_encryption[0]: Creation complete after 0s [id=devsu-python-app-development-cluster-20250418020336337500000003-20250418020358292500000012][0m
[0m[1mmodule.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"]: Creation complete after 5s [id=sgrule-1501699142][0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_nat_gateway.this[0]: Still creating... [9s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc.aws_nat_gateway.this[0]: Still creating... [19s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.vpc.aws_nat_gateway.this[0]: Still creating... [29s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [28s elapsed][0m[0m
[0m[1mmodule.vpc.aws_nat_gateway.this[0]: Still creating... [37s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [38s elapsed][0m[0m
[0m[1mmodule.vpc.aws_nat_gateway.this[0]: Still creating... [47s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [48s elapsed][0m[0m
[0m[1mmodule.vpc.aws_nat_gateway.this[0]: Still creating... [57s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [56s elapsed][0m[0m
[0m[1mmodule.vpc.aws_nat_gateway.this[0]: Still creating... [1m5s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [1m6s elapsed][0m[0m
[0m[1mmodule.vpc.aws_nat_gateway.this[0]: Still creating... [1m15s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [1m16s elapsed][0m[0m
[0m[1mmodule.vpc.aws_nat_gateway.this[0]: Still creating... [1m25s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [1m24s elapsed][0m[0m
[0m[1mmodule.vpc.aws_nat_gateway.this[0]: Still creating... [1m33s elapsed][0m[0m
[0m[1mmodule.vpc.aws_nat_gateway.this[0]: Creation complete after 1m38s [id=nat-05e37fab149264a03][0m
[0m[1mmodule.vpc.aws_route.private_nat_gateway[0]: Creating...[0m[0m
[0m[1mmodule.vpc.aws_route.private_nat_gateway[0]: Creation complete after 1s [id=r-rtb-0486adb25ef7589731080289494][0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [1m34s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [1m44s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [1m52s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [2m2s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [2m12s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [2m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [2m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [2m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [2m48s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [2m58s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [3m8s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [3m17s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [3m27s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [3m37s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [3m45s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [3m55s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [4m5s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [4m13s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [4m23s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [4m33s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [4m41s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [4m51s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [5m1s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [5m9s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [5m19s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [5m29s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [5m37s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [5m47s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [5m57s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [6m5s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [6m15s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [6m25s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [6m33s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [6m43s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [6m53s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [7m1s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [7m11s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [7m21s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [7m29s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [7m39s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [7m49s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [7m58s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [8m8s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [8m18s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [8m26s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [8m36s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [8m46s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [8m54s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [9m4s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [9m14s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [9m22s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [9m32s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [9m42s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [9m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [10m0s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [10m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [10m18s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [10m28s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [10m38s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [10m46s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [10m56s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [11m6s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [11m14s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [11m24s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [11m34s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [11m42s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [11m52s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [12m2s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [12m11s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [12m21s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Still creating... [12m31s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.this[0]: Creation complete after 12m34s [id=devsu-python-app-development][0m
[0m[1mmodule.eks.aws_ec2_tag.cluster_primary_security_group["Terraform"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_eks_access_entry.this["cluster_creator"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_ec2_tag.cluster_primary_security_group["Environment"]: Creating...[0m[0m
[0m[1mmodule.eks.data.tls_certificate.this[0]: Reading...[0m[0m
[0m[1mmodule.eks.time_sleep.this[0]: Creating...[0m[0m
[0m[1mmodule.eks.data.tls_certificate.this[0]: Read complete after 1s [id=922877a0975ad078a65b8ff11ebc47b8311945c7][0m
[0m[1mmodule.eks.aws_iam_openid_connect_provider.oidc_provider[0]: Creating...[0m[0m
[0m[1mmodule.eks.aws_ec2_tag.cluster_primary_security_group["Terraform"]: Creation complete after 1s [id=sg-0c46d5b9eb0c0d81e,Terraform][0m
[0m[1mmodule.eks.aws_ec2_tag.cluster_primary_security_group["Environment"]: Creation complete after 1s [id=sg-0c46d5b9eb0c0d81e,Environment][0m
[0m[1mmodule.eks.aws_eks_access_entry.this["cluster_creator"]: Creation complete after 1s [id=devsu-python-app-development:arn:aws:iam::842675974385:user/Terraform][0m
[0m[1mmodule.eks.aws_eks_access_policy_association.this["cluster_creator_admin"]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_openid_connect_provider.oidc_provider[0]: Creation complete after 0s [id=arn:aws:iam::842675974385:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/82ED8A4EF6670B58A1F0B950FE65DF71][0m
[0m[1mmodule.eks.aws_eks_access_policy_association.this["cluster_creator_admin"]: Creation complete after 1s [id=devsu-python-app-development#arn:aws:iam::842675974385:user/Terraform#arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy][0m
[0m[1mmodule.eks.time_sleep.this[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.eks.time_sleep.this[0]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.eks.time_sleep.this[0]: Still creating... [28s elapsed][0m[0m
[0m[1mmodule.eks.time_sleep.this[0]: Creation complete after 28s [id=2025-04-18T02:17:01Z][0m
[0m[1m[32m
Apply complete! Resources: 59 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mcluster_endpoint = "https://82ED8A4EF6670B58A1F0B950FE65DF71.sk1.us-east-1.eks.amazonaws.com"
cluster_name = "devsu-python-app-development"
cluster_security_group_id = "sg-06fc2e5f8277d4da4"
region = "us-east-1"
